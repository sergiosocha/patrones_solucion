plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'

	id "de.undercouch.download" version "5.3.0"


}

group = 'com.patrones'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'mysql:mysql-connector-java:8.0.33'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'io.micrometer:micrometer-registry-new-relic'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	implementation 'com.newrelic.agent.java:newrelic-api:7.0.0'
	implementation 'com.newrelic.agent.java:newrelic-agent:7.0.0'
	implementation 'org.slf4j:slf4j-api:2.0.9'
}

tasks.register('downloadNewrelic', Download) {
	mkdir 'newrelic'
	src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
	dest file('newrelic')
}


tasks.register('unzipNewrelic', Copy) {
	from zipTree(file('newrelic/newrelic-java.zip'))
	into rootDir
}


tasks.named('test') {
	useJUnitPlatform()
}
